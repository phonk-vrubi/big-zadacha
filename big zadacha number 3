import os
import sys

import pygame
import requests

pygame.init()

coords = [37.615560, 55.752220]
zoom = 1

def map_req(zoom, coords):
    response = None
    map_request = "http://static-maps.yandex.ru/1.x/?ll={},{}&spn={},{}&l=map".format(coords[0], coords[1], zoom, zoom)
    response = requests.get(map_request)
    if not response:
        print("Ошибка выполнения запроса:")
        print(map_request)
        print("Http статус:", response.status_code, "(", response.reason, ")")
        sys.exit(1)
    map_file = "map.png"
    with open(map_file, "wb") as file:
        file.write(response.content)
    return map_file


m_f = map_req(zoom, coords)
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
            os.remove(m_f)
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_PAGEUP:
                zoom *= 1.1
                m_f = map_req(zoom, coords)
            if event.key == pygame.K_PAGEDOWN:
                zoom /= 1.1
                m_f = map_req(zoom, coords)
            if event.key == pygame.K_RIGHT:
                coords[0] += 0.1
                coords[0] = coords[0] % 180
                m_f = map_req(zoom, coords)
            if event.key == pygame.K_LEFT:
                coords[0] -= 0.1
                coords[0] = coords[0] % 180
                m_f = map_req(zoom, coords)
            if event.key == pygame.K_UP:
                coords[1] += 0.1
                coords[1] = coords[1] % 180
                m_f = map_req(zoom, coords)
            if event.key == pygame.K_DOWN:
                coords[1] -= 0.1
                coords[1] = coords[1] % 180
                m_f = map_req(zoom, coords)
    screen = pygame.display.set_mode((600, 450))
    screen.blit(pygame.image.load(m_f), (0, 0))
    pygame.display.flip()
